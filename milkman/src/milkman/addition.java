/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package milkman;

import java.awt.Color;
import java.awt.Component;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rakesh
 */
public class addition extends javax.swing.JInternalFrame {

    /**
     * Creates new form addition
     */
    
    private Date date = new Date();
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat mdy = new SimpleDateFormat("MM/dd/yyyy");
    DecimalFormat onedf = new DecimalFormat("#.#");
    DecimalFormat twodf = new DecimalFormat("#0.##");
    Connection conn;
    ResultSet rs;
    //private PreparedStatement INSERT_QRY;
    String qry = "";
    int framemode;
    private DefaultTableModel dtm;
    private int[] grid;
    
    public addition() {
        try {
            initComponents();
            clearscreen();
            
            dtpDate.setDate(date);
            txtproducercode.requestFocus();

            if(conn!=null){
                conn.close();
            }
            conn = methods.getConnection();
            
//            add_type.removeAllItems();
//            String q = "SELECT addition.add_type FROM addition GROUP BY addition.add_type;";
//            PreparedStatement loadcombo = conn.prepareStatement(q);
//            rs = loadcombo.executeQuery();
//            int i=0;
//            while (rs.next()) {
//               add_type.insertItemAt(rs.getString("add_type"), i);
//               i++;
//            }
//            rs.close();
            grid = new int[30];
            qry = "SELECT producergroup.ID, producergroup.grname\n" +
                    "FROM producergroup\n" +
                    "ORDER BY producergroup.ID;";
            PreparedStatement loadqry;            
            loadqry = conn.prepareStatement(qry);
            ResultSet rscombo;
            int i = 0;
            rscombo = loadqry.executeQuery();
            while(rscombo.next()) {
                int gid = rscombo.getInt("ID");
                cmbgroup.insertItemAt(rscombo.getString("grname"), i);
                grid[i] = gid;
                i++;
            }
            cmbgroup.setSelectedIndex(0);
            rscombo.close();
            loadqry.close();
            
            String colheader[] = {"ID", "उ. कोड", "नाव", "एकूण अतिरिक्त"};
            
            dtm = new DefaultTableModel(colheader, 500);                    
            table_deduction.setModel(dtm);

            table_deduction.setDefaultRenderer(Object.class, new DefaultTableCellRenderer()
            {
                @Override
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
                {
                    final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                    c.setBackground(row % 2 == 0 ? Color.LIGHT_GRAY : Color.WHITE);
                    return c;
                }
            }); 
            
            (table_deduction.getColumnModel().getColumn(0)).setPreferredWidth(40);
            (table_deduction.getColumnModel().getColumn(1)).setPreferredWidth(45);
            (table_deduction.getColumnModel().getColumn(2)).setPreferredWidth(250);
            (table_deduction.getColumnModel().getColumn(3)).setPreferredWidth(100);
            
        } catch (SQLException ex) {
            Logger.getLogger(addition.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearscreen() {
        dtpDate.setDate(date);
        txtproducercode.setText(null);
        txtproducername.setText(null);
        add_type.setSelectedIndex(0);
        txt_addDesc.setText("");
        txtAmount.setText("0.00");
        txt_billDeduction.setText("0.00");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_deduction = new javax.swing.JTable();
        txtproducername = new javax.swing.JTextField();
        txtAmount = new javax.swing.JFormattedTextField();
        txtproducercode1 = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txt_billDeduction = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtproducercode = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        btnsave = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        btnrefresh = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dtpDate = new com.toedter.calendar.JDateChooser();
        add_type = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_addDesc = new javax.swing.JTextArea();
        btnShowReports = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        cmb_deductionType = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cmbgroup = new javax.swing.JComboBox();

        setClosable(true);
        setTitle("अतिरिक्त");

        jLabel11.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("प्रकार :");

        table_deduction.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        table_deduction.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        table_deduction.setRequestFocusEnabled(false);
        table_deduction.setRowHeight(24);
        table_deduction.setSelectionForeground(new java.awt.Color(153, 0, 0));
        jScrollPane1.setViewportView(table_deduction);

        txtproducername.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        txtproducername.setForeground(new java.awt.Color(51, 51, 255));
        txtproducername.setFocusable(false);

        txtAmount.setForeground(new java.awt.Color(204, 0, 0));
        txtAmount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAmount.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        txtAmount.setName(""); // NOI18N

        txtproducercode1.setForeground(new java.awt.Color(51, 51, 255));
        txtproducercode1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtproducercode1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtproducercode1.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("रक्कम :");

        jLabel13.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("तपशील :");

        txt_billDeduction.setForeground(new java.awt.Color(51, 51, 255));
        txt_billDeduction.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txt_billDeduction.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_billDeduction.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        txt_billDeduction.setName(""); // NOI18N
        txt_billDeduction.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_billDeductionFocusGained(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("बिल कपात :");

        jPanel1.setBackground(new java.awt.Color(113, 168, 168));

        jLabel5.setFont(new java.awt.Font("Mangal", 1, 24)); // NOI18N
        jLabel5.setText("उत्पादकाची अतिरिक्त एन्ट्री");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtproducercode.setForeground(new java.awt.Color(51, 51, 255));
        txtproducercode.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtproducercode.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtproducercode.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        txtproducercode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproducercodeActionPerformed(evt);
            }
        });
        txtproducercode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtproducercodeFocusLost(evt);
            }
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtproducercodeFocusGained(evt);
            }
        });
        txtproducercode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtproducercodeKeyReleased(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(113, 168, 168));

        btnsave.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        btnsave.setText("सेव्ह");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btnexit.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        btnexit.setText("बाहेर");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });

        btnrefresh.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        btnrefresh.setText("रेफ्रेश");
        btnrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefreshActionPerformed(evt);
            }
        });

        btndelete.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        btndelete.setText("डिलीट");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnPrint.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        btnPrint.setText("प्रिंट");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnexit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnrefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btndelete, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(btnsave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnexit, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnrefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        jLabel17.setBackground(new java.awt.Color(204, 255, 51));
        jLabel17.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 0, 51));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("अतिरिक्त तपशील");
        jLabel17.setOpaque(true);

        jLabel3.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jLabel3.setText("उत्पादक कोड :");

        jLabel6.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jLabel6.setText("तारीख :");

        dtpDate.setFocusable(false);
        dtpDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dtpDate.setName("dtpDate"); // NOI18N

        add_type.setFont(new java.awt.Font("Mangal", 0, 11)); // NOI18N
        add_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Uchal", "Pashukhadya Vikri", "Other" }));
        add_type.setName("add_type"); // NOI18N
        add_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_typeActionPerformed(evt);
            }
        });

        txt_addDesc.setColumns(20);
        txt_addDesc.setRows(5);
        txt_addDesc.setName("add_desc"); // NOI18N
        jScrollPane2.setViewportView(txt_addDesc);

        btnShowReports.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        btnShowReports.setText("रिपोर्ट बघणे");
        btnShowReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowReportsActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jLabel15.setText("कपात प्रकार :");

        cmb_deductionType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmb_deductionType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Auto", "Manual" }));
        cmb_deductionType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_deductionTypeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jLabel2.setText("ग्रुप :");

        cmbgroup.setFont(new java.awt.Font("Mangal", 1, 14)); // NOI18N
        cmbgroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbgroupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtproducercode, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtproducercode1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(dtpDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtproducername)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnShowReports, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(3, 3, 3)
                                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(10, 10, 10)
                                                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(35, 35, 35)
                                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(4, 4, 4)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(add_type, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jScrollPane2))
                                                .addGap(9, 9, 9))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_billDeduction, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cmb_deductionType, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dtpDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmbgroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addComponent(btnShowReports))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtproducercode)
                            .addComponent(txtproducername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtproducercode1)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(add_type)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cmb_deductionType, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_billDeduction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35))
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_billDeductionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_billDeductionFocusGained
        txt_billDeduction.selectAll();
    }//GEN-LAST:event_txt_billDeductionFocusGained
    
    private String getprodname(int id) throws SQLException {
        String pname = "";
        String qry2 = "SELECT producer.pro_name, producer.rtc_no, producer.ID," +
                " producer.share_amt, producer.ribet, producer.chiling_amt, producer.veh_exp, producer.prod_id" +
                " FROM producer" +
                " WHERE (((producer.ID)="+id+") AND producergroupid = " + grid[cmbgroup.getSelectedIndex()] + ");";
        PreparedStatement prname;
        prname = conn.prepareStatement(qry2);
        ResultSet rspname;
        rspname = prname.executeQuery();
        while(rspname.next()) {
            pname = rspname.getString("pro_name");
            txtproducercode1.setText(rspname.getString("prod_id"));
            if(!pname.equals("")) {
                //return "";
            } else {
                //pname = "";
                //return pname;
            }
        }
        return pname;
    }
    
    private void txtproducercodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproducercodeActionPerformed
        if(!txtproducercode.getText().equals("")) {
            int pid = Integer.parseInt(txtproducercode.getText());
            String pname;
            try {
                pname = getprodname(pid);
                txtproducername.setText(pname);
                add_type.requestFocus();
                if(pname.equals("")) {
                    JOptionPane.showMessageDialog(null, "कृपया उत्पादकाचा कोड तपासा..!!", "Milkman", JOptionPane.ERROR_MESSAGE);
                    txtproducercode.requestFocus();
                    txtproducercode.setText(null);
                } else {

                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "कृपया उत्पादकाचा कोड तपासा..!!","Milkman", JOptionPane.ERROR_MESSAGE);
                txtproducercode.requestFocus();
                txtproducercode.setText(null);
                Logger.getLogger(milkcollection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex,"Milkman", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtproducercodeActionPerformed

    private void txtproducercodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtproducercodeFocusGained
        txtproducercode.setBackground(Color.CYAN);
    }//GEN-LAST:event_txtproducercodeFocusGained

    private void txtproducercodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtproducercodeFocusLost
        txtproducercode.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtproducercodeFocusLost

    private void txtproducercodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtproducercodeKeyReleased
        if(evt.getKeyCode()==10){
            //            if(!txtproducercode.getText().equals("")) {
                //                int pid = Integer.parseInt(txtproducercode.getText());
                //                String pname;
                //                try {
                    //                    pname = getprodname(pid);
                    //                    txtproducername.setText(pname);
                    //                    if(pname.equals("")) {
                        //                        JOptionPane.showMessageDialog(null, "कृपया उत्पादकाचा कोड तपासा..!!", "Milkman", JOptionPane.ERROR_MESSAGE);
                        //                        txtproducercode.requestFocus();
                        //                        txtproducercode.setText(null);
                        //                    } else {
                        //
                        //                    }
                    //                } catch (SQLException ex) {
                    //                    JOptionPane.showMessageDialog(null, "कृपया उत्पादकाचा कोड तपासा..!!","Milkman", JOptionPane.ERROR_MESSAGE);
                    //                    txtproducercode.requestFocus();
                    //                    txtproducercode.setText(null);
                    //                    Logger.getLogger(milkcollection.class.getName()).log(Level.SEVERE, null, ex);
                    //                    JOptionPane.showMessageDialog(null, ex,"Milkman", JOptionPane.ERROR_MESSAGE);
                    //                }
                //            }
        }
    }//GEN-LAST:event_txtproducercodeKeyReleased

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        try {
            if(conn==null){
                conn = methods.getConnection();
            }

            PreparedStatement INSERT_QRY;
            // Prepate statement for inserting record
            qry = "INSERT INTO addition (add_date, pro_code, pro_id," +
            " add_type, add_desc, amount, ded_amt, deduction_type)" +
            " VALUES (?,?,?,?,?,?,?,?)";
            INSERT_QRY = conn.prepareStatement(qry);
            INSERT_QRY.setString(1, ""+sdf.format(dtpDate.getDate()));
            INSERT_QRY.setString(2, ""+txtproducercode1.getText());
            INSERT_QRY.setString(3, ""+txtproducercode.getText());
            INSERT_QRY.setString(4, ""+add_type.getSelectedItem());
            //System.out.println(txtproducercode1.getText());
            INSERT_QRY.setString(5, ""+txt_addDesc.getText());
            INSERT_QRY.setString(6, ""+txtAmount.getText());
            INSERT_QRY.setString(7, ""+txt_billDeduction.getText());
            INSERT_QRY.setString(8, ""+cmb_deductionType.getSelectedItem());
            
            INSERT_QRY.execute();

            //System.out.println("am here");
            JOptionPane.showMessageDialog(null, "रेकॉर्ड सेव्ह झाला..!!", "Milkman", JOptionPane.INFORMATION_MESSAGE);
            
//            add_type.removeAllItems();
//            String q = "SELECT addition.add_type FROM addition GROUP BY addition.add_type;";
//            PreparedStatement loadcombo = conn.prepareStatement(q);
//            rs = loadcombo.executeQuery();
//            int i=0;
//            while (rs.next()) {
//               add_type.insertItemAt(rs.getString("add_type"), i);
//               i++;
//            }
//            rs.close();
            
            PrintWriter writer = null;
            PrinterJob job = PrinterJob.getPrinterJob();
            PageFormat pf = job.defaultPage();
            Paper paper = pf.getPaper();
            double width = 4d * 72d;
            double height = 3.9d * 72d;
            double margin = 0.25d * 72d;
            paper.setSize(width, height);
            paper.setImageableArea(
                    margin,
                    margin,
                    width - (margin * 2),
                    height - (margin * 2));
            pf.setOrientation(PageFormat.PORTRAIT);
            pf.setPaper(paper);
            
            //System.out.println("Page Height - "+pf.getHeight());
            PrintReciept_addition pr = new PrintReciept_addition();
            pr.data0 = methods.firmname; // + "\n";
            if ("Marathi".equals(methods.reciept_lang)) {
                pr.data1 = ""; // " + methods.firmadd + "\n";
                pr.data2 = ""; //      saMpak : " + methods.firmcontactno + "\n";
                SimpleDateFormat dateformat = new SimpleDateFormat("dd/MM/yyyy");
                pr.data3 = "दिनांक     : " + dateformat.format(dtpDate.getDate()) + " -: " + pr.Shift + "";
                pr.data4 = "उत्पादक    : " + txtproducercode.getText() + " - " + txtproducername.getText() + "";
                pr.data5 = "कपात प्रकार  : " + add_type.getSelectedItem().toString() + "";
                pr.data6 = "तपशील     : " + txt_addDesc.getText();
                pr.data7 = "रक्कम       : " + txtAmount.getText();
            } else {
                pr.data1 = ""; // " + methods.firmadd + "\n";
                pr.data2 = ""; //      saMpak : " + methods.firmcontactno + "\n";
                SimpleDateFormat dateformat = new SimpleDateFormat("dd/MM/yyyy");
                pr.data3 = "Date            : " + dateformat.format(dtpDate.getDate()) + " -: " + pr.Shift + "";
                pr.data4 = "Producer        : " + txtproducercode.getText() + " - " + txtproducername.getText() + "";
                pr.data5 = "deduction Type  : " + add_type.getSelectedItem().toString() + "";
                pr.data6 = "Detail          : " + txt_addDesc.getText();
                pr.data7 = "Amount          : " + txtAmount.getText();
            }
            job.setPrintable(pr, pf);
            boolean ok = job.printDialog();
            if (ok) {
                try {
                    job.print();
                } catch (PrinterException ex) {
                    /* The job did not successfully complete */
                }
            }
            clearscreen();
            txtproducercode.requestFocus();

        } catch (SQLException ex) {
            Logger.getLogger(addition.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        if (conn!=null) {
            try {
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(addition.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        dispose();
    }//GEN-LAST:event_btnexitActionPerformed

    private void btnrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefreshActionPerformed
        clearscreen();
        //getdeductionreport();
        btnShowReportsActionPerformed(evt);
        txtproducercode.requestFocus();
    }//GEN-LAST:event_btnrefreshActionPerformed

    private void getdeductionreport() {
        try {
            int r;
            int c;
            for(r=0; r<table_deduction.getRowCount(); r++) {
                for (c=0; c<table_deduction.getColumnCount(); c++) {
                    table_deduction.setValueAt("", r, c);
                }
            }         
            String q;
//            q = "SELECT addition.ID, addition.pro_code, producer.pro_name, addition.amount," +
//                " addition.add_date FROM producer INNER JOIN addition ON producer.prod_id = addition.pro_code"+
//                " WHERE (((addition.add_date)=#"+mdy.format(dtpDate.getDate())+"#));";
            q = "SELECT addition.ID, addition.pro_code, producer.pro_name, addition.amount" +
                " FROM producer INNER JOIN addition ON producer.prod_id = addition.pro_code " +
                " ORDER BY addition.ID DESC , addition.add_date DESC;";
            try (PreparedStatement DED_REPORT = conn.prepareStatement(q, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE)) {
                ResultSet rs1;
                rs1 = DED_REPORT.executeQuery();
                int i=0;
                int j=0;
                while(rs1.next()) {
                    for (j=0; j<table_deduction.getColumnCount(); j++) {
                        table_deduction.setValueAt(rs1.getString(j+1), i, j);
                    }
                    i++;                    
                }
                rs1.close();
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(addition.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }
    
    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        try {
            int ans = JOptionPane.showConfirmDialog(null, "रेकॉर्ड नक्की काढण्यात यावे?", "Milkman", JOptionPane.YES_NO_OPTION);
            if (ans == JOptionPane.YES_OPTION && table_deduction.getSelectedRow() != -1) {
                int id = Integer.parseInt("0"+table_deduction.getValueAt(table_deduction.getSelectedRow(), 0));
                qry = "Delete * from addition where ID = "+id+";";
                PreparedStatement delete_qry = conn.prepareStatement(qry);
                delete_qry.execute();
                JOptionPane.showMessageDialog(null, "रेकॉर्ड काढण्यात आला..!!", "Milkman", JOptionPane.INFORMATION_MESSAGE);
                clearscreen();
                getdeductionreport();
                txtproducercode.requestFocus();
            }
        } catch (SQLException ex) {
            Logger.getLogger(addition.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void add_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_typeActionPerformed
        txt_addDesc.requestFocus();
    }//GEN-LAST:event_add_typeActionPerformed

    private void btnShowReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowReportsActionPerformed
        try {       
            int r;
            int c;
            for(r=0; r<table_deduction.getRowCount(); r++) {
                for (c=0; c<table_deduction.getColumnCount(); c++) {
                    table_deduction.setValueAt("", r, c);
                }
            }         
            String q;
            q = "SELECT addition.ID, addition.pro_id, producer.pro_name, addition.amount," +
                " addition.add_date FROM producer INNER JOIN addition ON producer.prod_id = addition.pro_code"+
                " WHERE (((addition.add_date)=#"+mdy.format(dtpDate.getDate())+"#));";
            try (PreparedStatement DED_REPORT = conn.prepareStatement(q, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE)) {
                ResultSet rs1;
                rs1 = DED_REPORT.executeQuery();
                int i=0;
                int j=0;
                while(rs1.next()) {
                    for (j=0; j<table_deduction.getColumnCount(); j++) {
                        table_deduction.setValueAt(rs1.getString(j+1), i, j);
                    }
                    i++;                    
                }
                rs1.close();
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(addition.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnShowReportsActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrintActionPerformed

    private void cmbgroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbgroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbgroupActionPerformed

    private void cmb_deductionTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_deductionTypeActionPerformed
        if (cmb_deductionType.getSelectedItem() == "Auto") {
            txt_billDeduction.setText("0");
            txt_billDeduction.setEditable(true);
        } else {
            txt_billDeduction.setText("0");
            txt_billDeduction.setEditable(false);
        }
    }//GEN-LAST:event_cmb_deductionTypeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox add_type;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnShowReports;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnrefresh;
    private javax.swing.JButton btnsave;
    private javax.swing.JComboBox<String> cmb_deductionType;
    private javax.swing.JComboBox cmbgroup;
    private com.toedter.calendar.JDateChooser dtpDate;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table_deduction;
    private javax.swing.JFormattedTextField txtAmount;
    private javax.swing.JTextArea txt_addDesc;
    private javax.swing.JFormattedTextField txt_billDeduction;
    private javax.swing.JFormattedTextField txtproducercode;
    private javax.swing.JFormattedTextField txtproducercode1;
    private javax.swing.JTextField txtproducername;
    // End of variables declaration//GEN-END:variables
}
