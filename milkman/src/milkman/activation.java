/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package milkman;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Rakesh
 */
public class activation extends javax.swing.JFrame {

    /**
     * Creates new form activation
     */
    
    String refcode;
    Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
    Connection con = null;
    ResultSet rs;    
    DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
    
    public activation() {
        
            initComponents();
            
        
    }
        
    public activation(String refcode) {
        initComponents();
        
        String today = df.format(new Date());
        System.out.println(today);
        txtActivationDate.setText(today);
        setLocation((d.width-getWidth())/2, (d.height-getHeight())/2);
        try {
            //String v = WinRegistry.readString(WinRegistry.HKEY_CURRENT_USER, "AMJ0000\\System", "K3");
            //System.out.println(v.containsKey("K1"));
            //File f = new File("C:\\Users\\Public\\Documents\\AMJ.txt");
            //if(f.exists() && !f.isDirectory()) { 
            
            // ----------------------------------------------------------
            // Check the env setup is created or not
            // If Not then 
            //      consider the new installation
            //      Create env directory in "/runtime/bin/" folder
            //      Create following JSON files
            //      1. ID.json - Installation Detail.
            //      2. AP.json - Acrivation detail with periods and type.
            //      3. 
            
            // If Yes then check the 
            
            
            String value = WinRegistry.readString(WinRegistry.HKEY_CURRENT_USER, "AMJ0000\\System", "K1");
            //System.out.println(value);
            if (value != null) {
                jButton3.setVisible(false);
                jButton1.setVisible(true);
            } else {
                jButton3.setVisible(true);
                jButton1.setVisible(false);
            }
        } catch (IllegalArgumentException | IllegalAccessException | InvocationTargetException ex) {
            Logger.getLogger(activation.class.getName()).log(Level.SEVERE, null, ex);
        }
        setLocation((d.width-getWidth())/2, (d.height-getHeight())/2);
        this.refcode = refcode;
        jTextField1.setText(this.refcode);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtActivationDate = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Activation");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jButton1.setText("Activate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Referance Code :");

        jTextField1.setEditable(false);
        jTextField1.setText("ABCD-EFGH");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Activation Code :");

        jTextField2.setText("1234-5678");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/milkman/activate.jpg"))); // NOI18N

        jLabel4.setBackground(new java.awt.Color(153, 255, 153));
        jLabel4.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("<html>Activate your copy.</html>");
        jLabel4.setBorder(new javax.swing.border.MatteBorder(null));
        jLabel4.setOpaque(true);

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel5.setText("<html>Autthor : Rakesh Pawar.</html>");

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel6.setText("<html>Contact Number : +91 9673134555</html>");

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel7.setText("<html>E-mail : pawarrakeshm@gmail.com</html>");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jButton3.setText("Activate DEMO");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Activation Date :");

        txtActivationDate.setEditable(false);
        txtActivationDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3)
                        .addGap(3, 3, 3)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtActivationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator1)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtActivationDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jTextField2.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter serial key given by author.", "Milkman", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                // Check the key entered is valid or not
//            String newsrno = "";
//            int i;
//            for(i=0;i<this.refcode.length();i++){
//                String chr = this.refcode.substring(i, i+1);
//                //System.out.println("Single chr : "+chr);
//                int asccode = chr.hashCode();
//                //System.out.println("Ascii Code : "+asccode);
//                if (asccode >= 65 && asccode <= 85) {
//                    asccode = asccode + 5;
//                } else if (asccode == 86) {
//                    asccode = 65;
//                } else if (asccode == 87) {
//                    asccode = 66;
//                } else if (asccode == 88) {
//                    asccode = 67;
//                } else if (asccode == 89) {
//                    asccode = 68;
//                } else if (asccode == 90) {
//                    asccode = 69;
//                } else if (asccode >= 48 && asccode <= 52) {
//                    asccode = asccode + 5;
//                } else if (asccode == 53) {
//                    asccode = 48;
//                } else if (asccode == 54) {
//                    asccode = 49;
//                } else if (asccode == 55) {
//                    asccode = 50;
//                } else if (asccode == 56) {
//                    asccode = 51;
//                } else if (asccode == 57) {
//                    asccode = 52;
//                } else if (asccode == 45) {
//                    asccode = 45;
//                }
//                
//                char newchr = (char)asccode;
//                newsrno = newsrno + newchr;
//                //System.out.println("New chr : "+newchr);
//            }

                // Generate act_key
                System.out.println(this.refcode);
                String act_key = methods.calculateSecurityHash(this.refcode, "MD2") +
                        methods.calculateSecurityHash(this.refcode, "MD5") +
                        methods.calculateSecurityHash(this.refcode, "SHA1");

                act_key = ""
                        + act_key.charAt(32)  + act_key.charAt(76)
                        + act_key.charAt(100) + act_key.charAt(50) + "-"
                        + act_key.charAt(2)   + act_key.charAt(91)
                        + act_key.charAt(73)  + act_key.charAt(72) + "-"
                        + act_key.charAt(98)  + act_key.charAt(47)
                        + act_key.charAt(65)  + act_key.charAt(18) + "-"
                        + act_key.charAt(85)  + act_key.charAt(27)
                        + act_key.charAt(53)  + act_key.charAt(102) + "-"
                        + act_key.charAt(15)  + act_key.charAt(99);
                //JOptionPane.showMessageDialog(null, newsrno);
                //match the serial key
                System.out.println(act_key);
                if (act_key.toUpperCase().equals(jTextField2.getText())) {
                    try {
                        if(con!=null) {
                            con.close();
                        }
                        con = methods.getConnection();
                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                        Date dt = new Date();
                        String update_qry = "UPDATE config SET swcopycode = 'Activated', refno = '"+this.refcode+"', licenceno = '"+act_key+"', instalationdate = #"+sdf.format(dt)+"# WHERE ID = 1;";
                        try (PreparedStatement u_qry = con.prepareStatement(update_qry)) {
                            u_qry.execute();
                        }
                        con.close();
                        JOptionPane.showMessageDialog(null, "Thank you for activating software. This will reset the application.", "Milkman", JOptionPane.INFORMATION_MESSAGE);
                        String sysdir = System.getenv("LOCALAPPDATA"); // + "\\system32";
                        File f = new File(sysdir+"\\AMJ.conf");
                        Process p = Runtime.getRuntime().exec("attrib -H " + f.getPath());
                        p.waitFor();
                        FileWriter fw = new FileWriter(f);
                        fw.write("Z");
                        //fw.write("100");
                        fw.close();
                        p = Runtime.getRuntime().exec("attrib +H " + f.getPath());
                        p.waitFor();

                        WinRegistry.writeStringValue(WinRegistry.HKEY_CURRENT_USER, "AMJ0000\\System", "K2", "CT");
                        //WinRegistry.writeStringValue(WinRegistry.HKEY_CURRENT_USER, "AMJ0000\\System", "K3", "100");

                        System.exit(0);
                    } catch (SQLException | IOException | InterruptedException | IllegalArgumentException | IllegalAccessException | InvocationTargetException ex) {
                        Logger.getLogger(activation.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Entered serial key does not match. Please contact author.", "Milkman", JOptionPane.ERROR_MESSAGE);
                    jTextField2.setText("");
                    jTextField2.requestFocus();
                }
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(activation.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String msg="Are you sure? You want to activate demo version for 10 days.\nAfter that you are not able to access software without activation.";
        int ans;
        ans = JOptionPane.showConfirmDialog(null, msg, "Milkman -> Activation", JOptionPane.ERROR_MESSAGE);
        if(ans == JOptionPane.YES_OPTION){
            try {
                if(con!=null) {
                    con.close();
                }
                con = methods.getConnection();
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                Date dt = new Date();
                String update_qry = "UPDATE config SET swcopycode = 'DEMO', refno = 'ABCD-EFGH', licenceno = '1234-5678', instalationdate = #"+sdf.format(dt)+"# WHERE 1;";
                
                String sysdir = System.getenv("LOCALAPPDATA"); // + "\\system32";
                //System.out.println(sysdir);
                File f = new File(sysdir+"\\AMJ.conf");
                if(f.exists() && !f.isDirectory()) { 
                    // Activate demo not work
                    System.out.println("Software Acitvation Problem - Trying to modify system configuration");
                    System.exit(0);
                } else {
                    // Create one time file 
                    f.createNewFile();
                    try (FileWriter fw = new FileWriter(f)) {
                        fw.write("D");
                        //fw.write("0");
                    }

                    // Hide the file
                    Process p = Runtime.getRuntime().exec("attrib +H " + f.getPath());
                    p.waitFor();
                    //System.out.println("File does not exist");
                }
                
                try (PreparedStatement u_qry = con.prepareStatement(update_qry)) {
                    u_qry.execute();
                    // update registry
                    SimpleDateFormat dmy = new SimpleDateFormat("dd/MM/yyyy");
//                    String array[][] = new String[2][2];
//                    array[0][0] = "ACT_DATE";
//                    array[0][1] = dmy.format(new Date());
//                    array[1][1] = "ACT_TYPE";
//                    array[1][1] = "DEMO";
                    //String setvalue = methods.databasepath+methods.currdatabase+".accdb";
                    WinRegistry.createKey(WinRegistry.HKEY_CURRENT_USER, "AMJ0000\\System");
                    
                    // Installation Date
                    // INST_DATE
                    WinRegistry.writeStringValue(WinRegistry.HKEY_CURRENT_USER,
                    "AMJ0000\\System", "K1", ""+dmy.format(new Date()));
                    // Activation Type (ACT_TYPE)
                    // ACT_TYPE -> EM (DEMO) / CT (ACTIVATED)
                    WinRegistry.writeStringValue(WinRegistry.HKEY_CURRENT_USER,
                    "AMJ0000\\System", "K2", "EM");
                    // Total SW Run Count (SW_RUN_COUNT)
                    // IF SW_RUN_COUNT > 100 and DEMO -> show activation Key
                    WinRegistry.writeStringValue(WinRegistry.HKEY_CURRENT_USER,
                    "AMJ0000\\System", "K3", "0");
                    // Demo expiry date (D_EXP_DATE)
                    // D_EXP_DATE = INST_DATE + 10 Day's
                    Calendar D_EXP_DATE = Calendar.getInstance();
                    D_EXP_DATE.setTime(new Date()); // Now use today date.
                    D_EXP_DATE.add(Calendar.DATE, 10); // Adding 5 days
                    WinRegistry.writeStringValue(WinRegistry.HKEY_CURRENT_USER,
                    "AMJ0000\\System", "K4", ""+dmy.format(D_EXP_DATE.getTime()));
                    // SW last run date (SW_L_RUN_DT)
                    // SW_L_RUN_DT = Now
                    WinRegistry.writeStringValue(WinRegistry.HKEY_CURRENT_USER,
                    "AMJ0000\\System", "K5", dmy.format(new Date()));
                    
                } catch (IllegalArgumentException | IllegalAccessException | InvocationTargetException ex) {
                    Logger.getLogger(activation.class.getName()).log(Level.SEVERE, null, ex);
                }
                con.close();
                JOptionPane.showMessageDialog(null, "Thank you for showing interest in this software. \nAm giving you guarnatee that you will have nice experiance with us.", "Milkman", JOptionPane.INFORMATION_MESSAGE);
                System.exit(0);
            } catch (SQLException | IOException | InterruptedException ex) {
                Logger.getLogger(activation.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JFormattedTextField txtActivationDate;
    // End of variables declaration//GEN-END:variables
}
