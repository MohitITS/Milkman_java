/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package milkman;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Rakesh
 */
public class displayreportsingaledatecriteria extends javax.swing.JInternalFrame {

    /**
     * Creates new form displayreportsingaledatecriteria
     */
    
    Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
    String reporttodispalay;
    Connection conn;
    String qry = "";
    int[] sanghid;
    private Date date = new Date();
    SimpleDateFormat mdy = new SimpleDateFormat("MM/dd/yyyy");
    SimpleDateFormat dmy = new SimpleDateFormat("dd/MM/yyyy");    
    String f_path;
    
    public displayreportsingaledatecriteria(String reporttodisplay) {
        try {
            initComponents();
            this.reporttodispalay = reporttodisplay;
            dtpfromdate.setDate(date);
            dtpfromdate1.setDate(date);
            dtptodate.setDate(date);
            if(conn!=null){
                conn.close();
            }
            conn = methods.getConnection();
        } catch (SQLException ex) {
            Logger.getLogger(displayreportsingaledatecriteria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dtpfromdate = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        dtpfromdate1 = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        dtptodate = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setTitle("दिनांक प्रमाणे  रिपोर्ट ");

        jPanel1.setBackground(new java.awt.Color(113, 168, 168));

        jLabel5.setFont(new java.awt.Font("Mangal", 1, 24)); // NOI18N
        jLabel5.setText("दिनांक प्रमाणे रिपोर्ट बघणे");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jLabel6.setText("दिनांक :");

        dtpfromdate.setFocusable(false);
        dtpfromdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(113, 168, 168));

        jButton1.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jButton1.setText("नोटपॅड फाईल तयार करणे");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jButton2.setText("बाहेर");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(159, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jLabel7.setText("फाईल :");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton3.setText("Select File");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("तारखे पासून :");

        dtpfromdate1.setFocusable(false);
        dtpfromdate1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Mangal", 1, 18)); // NOI18N
        jLabel9.setText("ते");

        dtptodate.setFocusable(false);
        dtptodate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dtpfromdate, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dtpfromdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(dtptodate, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(dtpfromdate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(dtpfromdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dtptodate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            switch (this.reporttodispalay) {
                case "Bank Excel File":
                    if (!jTextField1.getText().equals("")) {
                        DecimalFormat df = new DecimalFormat("#00000000000000.00");
                        f_path = jTextField1.getText();
                        String bankacno_D = "3516";
                        String bankacno_C = "3516";
                        double damt = 0;
                        double camt = 0;
                        String Line;
                        String bankac_sub = null;
                        
                        conn = methods.getConnection();
                        
                        // >> get total amount debeted
//                        String qry = "SELECT Sum(milkCollectionBill.amt_payable) AS SumOfamt_payable " +
//                            "FROM producer INNER JOIN milkCollectionBill ON producer.ID = milkCollectionBill.prod_code " +
//                            "WHERE (((producer.bankid) Is Not Null));"; // OR (((producer.bankid)<>''))
                        String qry = "SELECT Sum(milkCollectionBill.amt_payable) AS SumOfamt_payable " +
                            "FROM producer INNER JOIN milkCollectionBill ON producer.ID = milkCollectionBill.prod_code " +
                            "WHERE (((producer.bankid) Is Not Null) AND ((milkCollectionBill.from_date)>=#"+mdy.format(dtpfromdate1.getDate())+"#)"+
                            " AND ((milkCollectionBill.to_date)<=#"+mdy.format(dtptodate.getDate())+"#));";
                        
                        PreparedStatement dramt;
                        dramt = conn.prepareStatement(qry);
                        ResultSet rsdramt;
                        rsdramt = dramt.executeQuery();
                        while(rsdramt.next()) {
                            damt = rsdramt.getDouble("SumOfamt_payable");
                        }
                        rsdramt.close();
                        dramt.close();
                        // >> end to get total amount debeted
                        
                        // >> get owner ac no
                        qry = "SELECT config.bankacno FROM config;";
                        dramt = conn.prepareStatement(qry);
                        rsdramt = dramt.executeQuery();
                        while(rsdramt.next()) {
                            bankacno_D = rsdramt.getString("bankacno");
                            if (bankacno_C.substring(0, 4) == null) {
                            } else {
                                bankac_sub = bankacno_C.substring(0, 4);
                            }
                        }
                        rsdramt.close();
                        dramt.close();
                        // >> end to get total amount debeted
                                                
                        PrintWriter writer;
                        writer = new PrintWriter(jTextField1.getText()+"\\TTUM.TXT", "UTF-8");
                        // FIRST LINE
                        Line = bankacno_D + "  INR" + bankac_sub + "    D" + df.format(damt) + "DAIRY PAYMENT";
                        writer.println(Line);
                        
                        // >> get owner ac no
                        qry = "SELECT producer.acno, milkCollectionBill.amt_payable " +
                            "FROM producer INNER JOIN milkCollectionBill ON producer.ID = milkCollectionBill.prod_code " +
                            "WHERE (((producer.acno) Is Not Null) AND ((milkCollectionBill.amt_payable)<>0) AND" +
                            " ((milkCollectionBill.from_date)>=#"+mdy.format(dtpfromdate1.getDate())+"#) AND ((milkCollectionBill.to_date)<=#"+mdy.format(dtptodate.getDate())+"#));";
//                        System.out.println(qry);
                        dramt = conn.prepareStatement(qry);
                        rsdramt = dramt.executeQuery();
                        while(rsdramt.next()) {
                            bankacno_C = rsdramt.getString("acno");
                            if (bankacno_C.substring(0, 4) == null) {
                            } else {
                                bankac_sub = bankacno_C.substring(0, 4);
                            }
                            camt = rsdramt.getDouble("amt_payable");
                            
                            Line = bankacno_C + "  INR" + bankac_sub + "    C" + df.format(camt) + "DAIRY PAYMENT";
                            writer.println(Line);                            
                        }
                        rsdramt.close();
                        dramt.close();
                        // >> end to get total amount debeted                        
                        
                        //writer.println("The second line");
                        writer.close();

                        Map<String, Object> params;
                        params = new HashMap<>();
                        params.put("parmdramt", damt);
                        params.put("pardate", dtpfromdate.getDate());
                        String cond_qry = "milkCollectionBill.from_date >= #"+ mdy.format(dtpfromdate1.getDate()) +"# and milkCollectionBill.to_date <= #"+ mdy.format(dtptodate.getDate()) +"#";
                        params.put("wherecondition", cond_qry);

                        JasperPrint jasperprint;
                        String rname = methods.reportpath+"//bankpaymentreg_Excel.jrxml";
                        JasperReport jasperreport; 
                        jasperreport = JasperCompileManager.compileReport(rname);
                        jasperprint = JasperFillManager.fillReport(jasperreport, params, conn);
//                        JOptionPane.showMessageDialog(null, "Ok Done!");                
                        JasperViewer jv;            
                        jv = new JasperViewer(jasperprint, false);
                        jv.setExtendedState(JFrame.MAXIMIZED_BOTH);
                        jv.setVisible(true);                
//
//    //                    File outputFile = new File("E:/bank.xls");
//    //                    FileOutputStream fos = new FileOutputStream(outputFile);
//                        JRXlsExporter exporterXLS = new JRXlsExporter();
////                        JOptionPane.showMessageDialog(null, "Done!");
//                        exporterXLS.setParameter(JRXlsExporterParameter.JASPER_PRINT, jasperprint);
//                        exporterXLS.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.FALSE);
//                        exporterXLS.setParameter(JRXlsExporterParameter.IS_DETECT_CELL_TYPE, Boolean.TRUE);
//                        exporterXLS.setParameter(JRXlsExporterParameter.IS_WHITE_PAGE_BACKGROUND, Boolean.FALSE);
//                        exporterXLS.setParameter(JRXlsExporterParameter.IS_REMOVE_EMPTY_SPACE_BETWEEN_ROWS, Boolean.TRUE);
//                        exporterXLS.setParameter(JRXlsExporterParameter.IS_REMOVE_EMPTY_SPACE_BETWEEN_COLUMNS, Boolean.TRUE);
//                        exporterXLS.setParameter(JRXlsExporterParameter.OUTPUT_FILE_NAME, f_path);
//    //                    exporterXLS.setParameter(JRXlsExporterParameter.OUTPUT_STREAM, fos);
//                        exporterXLS.exportReport();                    
//
                        JOptionPane.showMessageDialog(null, "फाईल तयार झाली...!!!", title, JOptionPane.INFORMATION_MESSAGE);
//                        conn.close();
//                        
//                        //Runtime.getRuntime().exec("\"+f_path);
//                        String[] cmdarray=new String[]{"cmd.exe","/c",f_path}; 
//                        Runtime.getRuntime().exec(cmdarray); 
                    }
                    break;
                case "":

                    break;
            }
        } catch (SQLException | IOException | JRException | NullPointerException ex) {
            Logger.getLogger(displayreportsingaledatecriteria.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Error : " + ex, title, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(conn!=null){
            try {
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(displayreportsingaledatecriteria.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.showOpenDialog(null);
        //File f = jfc.getSelectedFile();
        File f = jfc.getCurrentDirectory();
        String fp = f.getAbsolutePath();
        jTextField1.setText(fp);
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dtpfromdate;
    private com.toedter.calendar.JDateChooser dtpfromdate1;
    private com.toedter.calendar.JDateChooser dtptodate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
